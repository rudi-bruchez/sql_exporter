
# A collector defining standard metrics for Microsoft SQL Server.
#
# It is required that the SQL Server user has the following permissions:
#
#   GRANT VIEW ANY DEFINITION TO
#   GRANT VIEW SERVER STATE TO
#
collector_name: mssql_databases

# Similar to global.min_interval, but applies to the queries defined by this collector only.
min_interval: 30s

metrics:
  - metric_name: mssql_connections
    type: gauge
    help: 'Number of active connections.'
    key_labels:
      - db
      - client
      - login
    values: [count]
    query: |
      SELECT 
        DB_NAME(database_id) as db,
        s.host_name as [client], 
        s.login_name as [login],
        COUNT(*) as [count]
      FROM sys.dm_exec_sessions s WITH (READUNCOMMITTED)
      WHERE s.is_user_process = 1
      AND DB_NAME(database_id) NOT IN (N'distribution', N'master', N'msdb', N'model')
      GROUP BY DB_NAME(database_id), s.host_name, s.login_name
      OPTION (RECOMPILE);

  - metric_name: mssql_log_growths
    type: counter
    help: 'Number of times the transaction log has been expanded, per database.'
    key_labels:
      - db
    values: [cntr_value]
    query: |
      SELECT rtrim(instance_name) AS db, cntr_value
      FROM sys.dm_os_performance_counters WITH (READUNCOMMITTED)
      WHERE counter_name = 'Log Growths' AND instance_name <> '_Total'
      OPTION (RECOMPILE);

  # - metric_name: mssql_checkpoint_pages_sec
  #   type: gauge
  #   help: 'Checkpoint Pages Per Second'
  #   values: [cntr_value]
  #   query: |
  #     SELECT cntr_value
  #     FROM sys.dm_os_performance_counters
  #     WHERE [counter_name] = 'Checkpoint pages/sec'

  - metric_name: mssql_io_stall_ms
    type: gauge
    help: 'Avg stall time in millisecond per database and I/O operation.'
    key_labels:
      - db
      - drive
    value_label: operation
    values:
      - read_latency
      - write_latency
    query_ref: mssql_io_metrics

  - metric_name: mssql_database_sizes
    type: gauge
    help: 'file size per database.'
    key_labels:
      - db
      - type
    value_label: operation
    values:
      - size_on_disk_mb
    query_ref: mssql_io_metrics

  - metric_name: mssql_percent_log_used
    type: gauge
    help: 'percent of transaction log used per database.'
    key_labels:
      - db
    values:
      - percent_log_used
    query_ref: mssql_db_sizes

queries:
  - query_name: mssql_io_metrics
    query: |
      SELECT 
        DB_NAME([vfs].[database_id]) db,
        mf.type_desc as [type],
        [io_stall_read_ms] / NULLIF([num_of_reads], 0) as [read_latency],
        [io_stall_write_ms] / NULLIF([num_of_writes], 0) as [write_latency],
        [num_of_bytes_read] / NULLIF([num_of_reads], 0) as [AvgBPerRead],
        [num_of_bytes_written] / NULLIF([num_of_writes], 0) as [AvgBPerWrite],
        LEFT([mf].[physical_name],2) [drive],
        [vfs].[sample_ms] / 1000 / 60 / 60 / 24 as [sample_days],
        [vfs].[num_of_reads],
        [vfs].[num_of_writes],
        [vfs].[size_on_disk_bytes]/1024/1024 as [size_on_disk_mb],
        --[mf].[physical_name],
        RIGHT([mf].[physical_name], CHARINDEX(N'\',REVERSE([mf].[physical_name]))-1) as file_name
      FROM [sys].[dm_io_virtual_file_stats](NULL,NULL) AS vfs
      JOIN [sys].[master_files] [mf] 
          ON [vfs].[database_id] = [mf].[database_id] 
          AND [vfs].[file_id] = [mf].[file_id]
      WHERE DB_NAME([vfs].[database_id]) NOT IN (N'master', N'model')
      OPTION (RECOMPILE, MAXDOP 1);

  - query_name: mssql_db_sizes
    query: |
      ;WITH cte AS (
        SELECT instance_name as db, counter_name, cntr_value
        FROM sys.dm_os_performance_counters WITH (READUNCOMMITTED)
        WHERE object_name = 'SQLServer:Databases'
        AND counter_name IN(N'Data File(s) Size (KB)', 
          N'Log File(s) Size (KB)', N'Log File(s) Used Size (KB)',
          N'Percent Log Used', N'Log Growths')
        AND instance_name NOT IN ( 
          N'model', N'mssqlsystemresource', N'msdb', N'_Total', N'master'
        )
      )
      SELECT db, 
        [Data File(s) Size (KB)] as data_file_size_kb, 
        [Log File(s) Size (KB)] as log_file_size_kb, 
        [Log File(s) Used Size (KB)] as log_file_used_kb,
        [Percent Log Used] as percent_log_used, 
        [Log Growths] as log_growths
      FROM 
      (
        SELECT db, counter_name, cntr_value
        FROM cte
      ) as t
      PIVOT
      (
        SUM(cntr_value)
        FOR counter_name IN([Data File(s) Size (KB)], 
          [Log File(s) Size (KB)], [Log File(s) Used Size (KB)],
          [Percent Log Used], [Log Growths])
      ) as pv
      OPTION (RECOMPILE, MAXDOP 1);      SELECT instance_name as db, counter_name, cntr_value
            FROM sys.dm_os_performance_counters WITH (READUNCOMMITTED)
            WHERE object_name = 'SQLServer:Databases'
            AND counter_name IN(N'Data File(s) Size (KB)', 
              N'Log File(s) Size (KB)', N'Log File(s) Used Size (KB)',
              N'Percent Log Used', N'Log Growths')
            AND instance_name NOT IN ( 
              N'model', N'mssqlsystemresource', N'msdb', N'_Total', N'master'
            )
            OPTION (RECOMPILE, MAXDOP 1);